<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[blog.koba04.com]]></title>
  <link href="http://blog.koba04.com/atom.xml" rel="self"/>
  <link href="http://blog.koba04.com/"/>
  <updated>2014-03-04T14:31:15+09:00</updated>
  <id>http://blog.koba04.com/</id>
  <author>
    <name><![CDATA[koba04]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[npmやbowerライブラリのバージョン管理]]></title>
    <link href="http://blog.koba04.com/post/2014/03/03/npm-and-bower-semantic-version/"/>
    <updated>2014-03-03T23:11:37+09:00</updated>
    <id>http://blog.koba04.com/post/2014/03/03/npm-and-bower-semantic-version</id>
    <content type="html"><![CDATA[<h2>npmとbowerライブラリのバージョン管理</h2>

<p>npmやbowerのライブラリをプロジェクトに導入するときは、&#8221;npm install &mdash;save xxx&#8221;や&#8221;bower install &mdash;save xxx&#8221;のような形で指定してインストールとpackage(bower).jsonへの記録をしたりします。</p>

<p>その場合、package(bower).jsonには&#8221;xxx&#8221;: &ldquo;~x.y.z&#8221;という形式で記録されます。</p>

<p>&ldquo;~x.y.z&#8221;という表記は、&rdquo;~1.2.3&#8221;だとすると1.2.3 &lt;= x.x.x &lt; 1.3.0 の間での最新バージョンがインストールされます。</p>

<!-- more -->


<ul>
<li><a href="https://www.npmjs.org/doc/misc/semver.html">https://www.npmjs.org/doc/misc/semver.html</a></li>
</ul>


<p>なので&#8221;~&ldquo;で指定していると、同じpackage(bower).jsonでもインストールするタイミングによって微妙に異なるバージョンがインストールされることになります。</p>

<p><del>npmやbowerにはGemのGemfile.lockやCartonのcpanfile.snapshotのように依存も含めたバージョンを固定するような仕組みはないと思います。</del></p>

<p><del>かと言ってnode_modulesとかbower_componentsをrepositoryの中にも入れたくないので今のプロジェクトでは&#8221;x.y.z&#8221;とバージョンを固定しています。</del></p>

<p><del>この辺りはみんなどうしてるんですかね？</del></p>

<p><strong>[追記:2013-03-04] yosuke_furukawaさんに教えていただきました!ありがとうございます！</strong></p>

<blockquote><p>npm shrinkwrapってコマンドがあって、それを使うとライブラリのバージョンを固定できる。bower shrinkwrapは実装待ち <a href="https://github.com/bower/bower/issues/505">https://github.com/bower/bower/issues/505</a></p></blockquote>

<p>というわけでnpmはnpm-shrinkwrapを使って管理することにしました yosuke_furukawa++</p>

<h2>npm-shrinkwrap</h2>

<p><a href="https://www.npmjs.org/doc/cli/npm-shrinkwrap.html">https://www.npmjs.org/doc/cli/npm-shrinkwrap.html</a></p>

<p>node_modulesにライブラリがインストールされている状態でnpm shrinkwrapするとnpm-shrinkwrap.jsonという依存しているライブラリのバージョンが記載されたファイルがつくられます。</p>

<p>devDependenciesも含めたい場合は、&mdash;devオプションを付ける必要があります</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% npm install
</span><span class='line'>:
</span><span class='line'>% npm shrinkwrap --dev
</span><span class='line'>wrote npm-shrinkwrap.json
</span><span class='line'>
</span><span class='line'>% cat npm-shrinkwrap.json
</span><span class='line'>{
</span><span class='line'>  "name": "myapp",
</span><span class='line'>  "version": "0.0.1",
</span><span class='line'>  "dependencies": {
</span><span class='line'>    "grunt-contrib-concat": {
</span><span class='line'>      "version": "0.3.0",
</span><span class='line'>      "from": "grunt-contrib-concat@"
</span><span class='line'>    },
</span><span class='line'>    "grunt-remove-logging": {
</span><span class='line'>      "version": "0.1.1",
</span><span class='line'>      "from": "grunt-remove-logging@",
</span><span class='line'>      "resolved": "https://registry.npmjs.org/grunt-remove-logging/-/grunt-remove-logging-0.1.1.tgz"
</span><span class='line'>    },
</span><span class='line'>    "grunt-contrib-coffee": {
</span><span class='line'>      "version": "0.7.0",
</span><span class='line'>      "from": "grunt-contrib-coffee@",
</span><span class='line'>      "dependencies": {
</span><span class='line'>        "coffee-script": {
</span><span class='line'>          "version": "1.6.3",
</span><span class='line'>          "from": "coffee-script@~1.6.2"
</span><span class='line'>        }
</span><span class='line'>      }
</span><span class='line'>    },
</span><span class='line'>    "grunt-contrib-compass": {
</span><span class='line'>      "version": "0.6.0",
</span><span class='line'>      "from": "grunt-contrib-compass@",
</span><span class='line'>      "resolved": "https://registry.npmjs.org/grunt-contrib-compass/-/grunt-contrib-compass-0.6.0.tgz",
</span><span class='line'>      "dependencies": {
</span><span class='line'>        "tmp": {
</span><span class='line'>          "version": "0.0.21",
</span><span class='line'>          "from": "tmp@0.0.21"
</span><span class='line'>        },
</span><span class='line'>        "dargs": {
</span><span class='line'>          "version": "0.1.0",
</span><span class='line'>          "from": "dargs@~0.1.0"
</span><span class='line'>        },
</span><span class='line'>        "async": {
</span><span class='line'>          "version": "0.2.9",
</span><span class='line'>          "from": "async@~0.2.0"
</span><span class='line'>        }
</span><span class='line'>      }
</span><span class='line'>    },
</span><span class='line'>:</span></code></pre></td></tr></table></div></figure>


<p>npm-shrinkwrap.jsonがある状態でnpm installするとnpm-shrinkwrap.json記載されてるバージョンでインストールされます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% npm install</span></code></pre></td></tr></table></div></figure>


<p>package.jsonで&#8221;x.y.z&#8221;指定でバージョン固定した場合でもそのライブラリが依存しているライブラリは&#8221;~x.y.z&#8221;で指定されているためバージョンがズレることがあったのですが、npm-shrinkwrapを使うと依存しているライブラリのバージョンも固定出来て素晴らしい！</p>

<h2>Semantic Versioning</h2>

<p>上の辺りを調べているときにSemantic Versioningというサイトがあるのをしりました。</p>

<ul>
<li><a href="http://semver.org/">http://semver.org/</a></li>
</ul>


<p>これによるとバージョンニングをMAJOR.MINOR.PATCHと定義していて、</p>

<ul>
<li>MAJORは互換性のない変更</li>
<li>MINORは後方互換性のある追加機能</li>
<li>PATCHは後方互換性のあるBugFix</li>
</ul>


<p>とされています。(1.0.0未満は開発版なので上の限りではない)</p>

<p>さきほどのnpmやbowerの&mdash;saveが&#8221;~x.y.z&#8221;となっているのも上のバージョニングだと考えると納得がいきます。</p>

<p>ただ、実際その通りになっているライブラリばかりではなく、PATCHバージョンあげたら動かなくなることもありますし、そもそも1.0.0未満だと対象外なので&#8221;~x.y.z&#8221;の指定で大丈夫というわけにはいきません。</p>

<p>BackboneにもSemantic Versioninigに従うべきというissueがあったりしますが、実際はなかなかむずかしそうです。(jashkenasもその通りにしていたらBackbone 43.0.0になってるとコメントしたりしています)</p>

<p><a href="https://github.com/jashkenas/backbone/issues/2888">https://github.com/jashkenas/backbone/issues/2888</a></p>

<p>普段使っているようなライブラリも依存関係を&#8221;~x.y.z&#8221;という形式で指定されていることが多いのですが、それによって依存ライブラリのPATCHレベルでの変更で壊れることもあったりして、なかなか難しい&hellip;</p>

<p>(結論なし..)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ブログ移行しました]]></title>
    <link href="http://blog.koba04.com/post/2014/03/02/blog-renewal/"/>
    <updated>2014-03-02T03:07:09+09:00</updated>
    <id>http://blog.koba04.com/post/2014/03/02/blog-renewal</id>
    <content type="html"><![CDATA[<p>これまでははてなダイアリーでブログを書いていたのですが、ふと思い立ってブログを移行しました。</p>

<p>旧ブログ: <a href="http://d.hatena.ne.jp/koba04/">http://d.hatena.ne.jp/koba04/</a></p>

<!-- more -->


<p>ページのフッターにある通り、Octopressを使ってGithubPagesで公開しています。テーマは一覧から「Octoflat」を選んでいます。</p>

<ul>
<li><a href="http://octopress.org/">http://octopress.org/</a></li>
<li><a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a></li>
</ul>


<p>ドメインはblog.koba04.comにkoba04.github.ioをCNAMEとして割り当てています(設定するときに間違ってAレコード消しちゃってしばらくアクセス出来なくしてしまいましたが&hellip;)</p>

<h2>なぜ移行したのかとなぜOctopress？</h2>

<p>はてなダイアリーだったのではてなブログとかにそろそろ移行しないとなぁと思っていたのが主な理由です。はてなブログでもよかったのですがせっかくなので色々自分で設定したいなと思い既存のブログサービスは選択しませんでした。</p>

<p>Octopressにした理由はGithubと親和性が高いのとRuby触るきっかけになるかなと思ったくらいです。<a href="https://ghost.org/">Ghost</a>と少し悩みましたがインフラをGithubに任せられるのがいいなと思ってOctopressにしました。</p>

<p>Github上で管理出来るのでissueをTODOとして使えるので便利ですね。ブラウザでmarkdown編集してcommit hookでdeploy出来るようにするとさらに便利そうだなぁと思ったりしてます。</p>

<h2>やったこと</h2>

<p>基本的にはSocial系のアカウント設定したりちょっとスタイル修正したりした程度ですが、わからないことが多くて結構詰まってました&hellip;でも楽しいです。</p>

<p>特にOctopressの仕組みがわかってなくて、sourceブランチとmasterブランチの関係とか、sourceの_deployにmasterが入っていて、そこからmasterのブランチをpushしてるのとか。。</p>

<ul>
<li>Twitter, Facebook, HatenaBookmarkのリンクを設置</li>
<li>Google Analyticsの設定</li>
<li>Disqusの設定</li>
<li>styleの修正</li>
<li>headerにブログ名をリンクを移動</li>
<li>なぜか末尾の/なしのURLがcanonicalで指定されていたので削除</li>
</ul>


<h2>Octopressでの記事書く流れ</h2>

<ul>
<li>previewサーバー立ち上げる</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle exec rake preview</span></code></pre></td></tr></table></div></figure>


<ul>
<li>記事書く</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle exec rake new_post["my great post"]
</span><span class='line'>vi source/_posts/xxxx-xx-xx-my-great-post.markdown
</span><span class='line'># 記事編集する</span></code></pre></td></tr></table></div></figure>


<ul>
<li>問題なければdeployしてpushする</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle exec rake deploy
</span><span class='line'>git push</span></code></pre></td></tr></table></div></figure>


<p>見にくい部分とか色々あるのでこれから徐々に直していきたいと思います！</p>
]]></content>
  </entry>
  
</feed>
